//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "filters")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub is_secured: bool,
    pub runs_map: String,
    pub can_have_password: bool,
    pub can_be_empty: bool,
    pub is_empty: bool,
    pub can_be_full: bool,
    pub runs_app_id: i32,
    pub not_app_id: i32,
    pub tags: String,
    pub match_name: String,
    pub match_version: String,
    pub restrict_unique_ip: bool,
    pub on_address: String,
    pub whitelisted: bool,
    pub spectator_proxy: bool,
    pub is_dedicated: bool,
    pub runs_linux: bool,
    pub has_game_dir: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::query::Entity")]
    Query,
}

impl Related<super::query::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Query.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
